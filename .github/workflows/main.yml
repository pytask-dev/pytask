name: main

# Automatically cancel a previous run.
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CONDA_EXE: mamba

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - '*'

jobs:

  run-tests:

    name: Run tests for ${{ matrix.os }} on ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          allow-prereleases: true
      - run: pip install tox

      - if: matrix.os == 'ubunut-latest'
        run: |
          sudo apt-get update
          sudo apt-get install graphviz graphviz-dev

      - if: matrix.os == 'macos-latest'
        run: brew install graphviz

      # Unit, integration, and end-to-end tests.

      - name: Run unit tests and doctests.
        shell: bash -l {0}
        run: tox -e pytest -- -m "unit or (not integration and not end_to_end)" --cov=src --cov=tests --cov-report=xml -n auto

      - name: Upload coverage report for unit tests and doctests.
        if: runner.os == 'Linux' && matrix.python-version == '3.10'
        shell: bash -l {0}
        run: bash <(curl -s https://codecov.io/bash) -F unit -c

      - name: Run integration tests.
        shell: bash -l {0}
        run: tox -e pytest -- -m integration --cov=src --cov=tests --cov-report=xml -n auto

      - name: Upload coverage reports of integration tests.
        if: runner.os == 'Linux' && matrix.python-version == '3.10'
        shell: bash -l {0}
        run: bash <(curl -s https://codecov.io/bash) -F integration -c

      - name: Run end-to-end tests.
        shell: bash -l {0}
        run: tox -e pytest -- -m end_to_end --cov=src --cov=tests --cov-report=xml -n auto

      - name: Upload coverage reports of end-to-end tests.
        if: runner.os == 'Linux' && matrix.python-version == '3.10'
        shell: bash -l {0}
        run: bash <(curl -s https://codecov.io/bash) -F end_to_end -c
