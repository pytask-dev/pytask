name: main

# Automatically cancel a previous run.
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - '*'

jobs:

  run-type-checking:

    name: Run tests for type-checking
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - run: uv run --no-dev --group typing mypy
      - run: uv run --no-dev --group typing nbqa mypy --ignore-missing-imports .

  run-tests:

    name: Run tests for ${{ matrix.os }} on ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install graphviz graphviz-dev

      # Unit, integration, and end-to-end tests.

      - name: Run unit tests and doctests.
        shell: bash -l {0}
        run: uv run --group test pytest --nbmake -m "unit or (not integration and not end_to_end)" --cov=src --cov=tests --cov-report=xml -n auto

      - name: Upload unit test coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v5
        with:
          flags: unit

      - name: Run integration tests.
        shell: bash -l {0}
        run: uv run --group test pytest --nbmake -m integration --cov=src --cov=tests --cov-report=xml -n auto

      - name: Upload integration test coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v5
        with:
          flags: integration

      - name: Run end-to-end tests.
        shell: bash -l {0}
        run: uv run --group test pytest --nbmake -m end_to_end --cov=src --cov=tests --cov-report=xml -n auto

      - name: Upload end_to_end test coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v5
        with:
          flags: end_to_end
